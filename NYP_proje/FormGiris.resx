<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABILAAASCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACkl
        HwtUTEBuMy4mawQEA1EAAAA2AAAAGAAAAAcAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAACQDoxL2lfUOBsYVHlR0A2rAAAAGAAAABAAAAAGQAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAFxSRRVjW0ynhXdl/5mFc/+Cc2P0YVZKzx0bFmoAAAAlAAAABgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAal9RKHlsXPaZh3P/q5SC/6eRfv+Bc2H/NzIqfQAAACEAAAAEAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABsYVIniXlp/5uJd/+mkoD/o498/2xhUtwmIh1qAAAAIwAA
        AAcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHBkVBeKemnvv7Kn/5yKeP+HeGf/WlFE0wQE
        A2YAAAA/AAAAFwAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwAA
        ABMAAAAbAAAAHAAAABwAAAAYAAAADQAAAAMAAAAAAAAAAAAAAAAAAAAAeGtaC4FyY6bWzMP/l4V0/49+
        bf90aFn1U0o+whcVEmkAAAAsAAAACQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAEAAAATAAAAOQAAAFAAAABUAAAAVAAAAEgAAAAoAAAACgAAAAAAAAAAAAAAAAAAAAB8b14Fem1dUb2x
        pf+ik4P/rJmI/6COff9/cGD/NzEqlAAAAD8AAAATAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAGCTDwBhldwDhLr/BZjO/wWZzv8Ce7H/AEBkpAAAADwAAAAUAAAABQAAAAIAAAAAAAAAAHtu
        XQF0aFggopOE/r6xpv+yoI//t6OS/5eGdv9RST61DQwKWAAAACAAAAAFAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAY5UPAF6TyAqp3/8R1///ENf//waVyv8ASG+5AAAATwAAADMAAAAjAAAAEgAA
        AAQAAAAAAAAAAHFkVAyLfGrk1cvD/qmYh/+0oZH/rZuL/3JnWN4oJB51AAAAKAAAAAYAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAABtowoAYpnLD6rf/w++8f8SxPf/CZTK/wBRfs4ANE2PADBIggAS
        GloAAAA0AAAAFAAAAAQAAAAAfW9eBoBxYJzUy8L8opKC/7WilP+7qZr/iHpp/jw1LX0AAAAhAAAABQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHCmAQBonqIQp9v7JKfW/x6w4f8Kn9T/Bnqw/waA
        tf8Eea77AEptrQAMEl4AAAAzAAAAEgAAAAOEdWMDf3FfRb6yqPmsn5D/u6ud/7Ohk/96bV/nNS8naQAA
        ABsAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGygGwB/trVize37Wczv/xq1
        5f8dxfT/JMz5/xu05P8GfrL2AEZopQAJDlkAAAAsAAAAC4JzYQF7bVwUo5SH88a6sP/BsqT/mYp5/0lB
        N6kAAABaAAAANQAAABYAAAAFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAG+kIgB/
        t7leyev7Y87w/yK76v8t0/7/Mdb//yS97f8Hf7L1AEJgmgAAAEMAAAAUAAAAAIN0YgOOfW3Z2dDK/ren
        mv+Ofm3/dmpZ7T43L54PDQtnAAAAOwAAABUAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAHOoIgCEvLhhyuz8bdPy/yO66f851f3/Otb+/ye45v8Aa5/nAAAAVAAAAC4AAAAbAAAAE35w
        XpnVzcX5q5yO/7WmmP+ml4f/iHlo/1lOQr4JCAdhAAAAMgAAABEAAAADAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAHiuJQGLwLpizO3+d9j1/yS76P9H3P//L73o/wBvpOQABglpAAcKXAAG
        CVMAAABBTUQ5YKykmvSonpP/saWa/7apnv+mmIv/g3Rl9Dw1LZsDAwJYAAAANgAAABoAAAAJAAAAAQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAf7YBAH2zJweRxbljzO3/gt72/yy+6f86xO3/AH22/gCE
        u/wAg7r7AHeo4QAgLHcNCwpmc2he9JGKg/+Mg3z/kod//52SiP+Nf3L/bWFS6EM8MaUKCQhnAAAASAAA
        ACcAAAANAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAhLsCAIO6KgyXybhmz+3/jeP5/yi4
        5P9Eye7/QMbs/z/F6/8ss97+BIzA9wN7re0Kf6/9DoS1/x6Cqv87gJn/YH2F/4eAev+Lf3P+fnFi+mld
        TtwvKiOJAAAATwAAACkAAAAMAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAiL8CAIi+LRGc
        z7po0O//luT5/zK+6f9m4P7/X9z7/17a+v9Y1PT/S8rv/0/O8v9R0PL/RMLo/zet0/8ol77/PYCZ/3p9
        ev+Xi4L/lIV4/XNnWOI9Ni2VAAAASwAAACAAAAAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAjMQBAIzELxWg0rds0e//oun7/07O8P9v4fz/beH8/27h/P9s3/v/beD8/23g/P9r3vr/Ytn1/07C
        5f8tqNT/Ooah/3uBgf+bkIb/loh7/W1gUtYtJyF9AAAAOAAAAA8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAkMkBAJLJMBqm17Vr0/H/feP6/3bi+/934vv/d+L6/3fj+/934vr/eOL6/3zl
        /P+p7/3/g930/1bH5/8ppc7/Soaa/4OPkP+iloz/kIFy9lhNQbMAAABLAAAAGgAAAAIAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAI/EPSCr2dSK4vf/gub7/4Lk+v+B5fv/geT6/4Lk
        +/954vr/RNP5/2Hc+/+o7Pz/jNvw/0/B4/80krH/Uo6h/6Scl/+hkoX/eWtb2RkWEmEAAAAkAAAABgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjsAlFqfX1Znk9/+Z6fv/ief5/4zn
        +v+M5/r/jej6/4Xl+/8YvO//Dbjs/2PW9f+Y5PX/fdTp/zCkyP8qlLb/pJ+c/6WYjP+HeWrnNzEpeQAA
        ACgAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACWyjgfsuL3u/H7/7Tw
        +/+d7Pn/l+r7/5jr+v+h8P3/ctnz/x6z4/8Vnsv/I7He/5Xg9P+g4vL/Mbjh/xCgz/+emZb/saac/4x+
        b+lGPTOCCwoIJwAAAAcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaDUPCm7
        6f/V9/3+x/T8/7rx+/+m7fr/o+77/4DZ8P80rtn/HqHP/054gvwYh7H4e9Lr/7Xx+/8/xOv/Bqne/6Wg
        nv+7san/iHlp5EQ6MXMODQsdAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAABpto0J7zs9dL0/P7U9fz/xvD5/2vB3f9GrNL/NqbP/xuTwv8+a3b4M09Uywp5qe50zeT/sfX9/0DF
        7P4Rp9f/t7Kw/7Spn/9+bV3UJSAbRgkIBxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAACp4CYauerLtOv5/+P4/P7H7fb/X7PT/wFzrf8dirX/WIqb/1toaP4PbZHuKZS//pvd
        6/+a7Pr/L7bd/japzP+7tK//oJGD+m1eTqIAAAAgAAAABgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAALjxEA636op22/b/4Pf8/tjz+P+14e3/UKPI/zWMsf9Xh53/KoGn/yyP
        u/+Exdv/vO/2/3Hc9/83rdD/crLF/66hlv6EdGTOSD81SQAAAAwAAAABAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAuvICArPqOibD8tOi6fr/4Pj8/+X2+f/F5u//h73T/06U
        uP9wrMj/qtbj/9P2+f+f6/v/O8Ts/2ysvv+epqL7kIBx1WtbTmwAAAAQAAAAAwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAuvMDALrxWTjM9uGZ5vr+1vX8/+v7
        /P/0//3/7//+/+v////X/P//mej6/0XK7v9RqsH8mJWL8o9+bcB1ZlZiRTwzFgAAAAMAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALv0UhvF
        98Bd1/jqpun8+bzw//+q7fz/kOX5/mLU8fsxu+H3Qpuv4X98cLOGc2CEdWRUNQAAAAYAAAABAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAwvsEAL30OwC/94MAwPjAAMH77ADD/PICv/XXErPgszGduYNxfnlVhHJhMmFURw0AAAACnIdzAQAA
        AAAAAAAAAAAAAAAAAAAAAAAA//wD///4A///+AP///gD///4A///+AH/gHgB/wB4AP8AGAD/AAwA/wAE
        AP8AAAD/gAAAf8ACAD/gAAAf8AAAB/AAAAP4AAAB/AAAAf4AAAH/AAAA/8AAAP/AAAD/wAAA/8AAAP/A
        AAH/wAAB/8AAAf/AAAP/4AAH//gAD//4AB8=
</value>
  </data>
</root>